---
interface Props {
  url: string;
}

const { url } = Astro.props;
---

<button class="share-button" data-url={url} title="Copy link to poem">
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"/>
    <polyline points="16 6 12 2 8 6"/>
    <line x1="12" y1="2" x2="12" y2="15"/>
  </svg>
</button>
<div class="toast" role="alert">Link copied!</div>

<script>
  document.querySelectorAll('.share-button').forEach(button => {
    button.addEventListener('click', async () => {
      const url = button.getAttribute('data-url');
      if (url) {
        try {
          await navigator.clipboard.writeText(url);
          const toast = button.nextElementSibling;
          toast.classList.add('show');
          setTimeout(() => {
            toast.classList.remove('show');
          }, 2000);
        } catch (err) {
          console.error('Failed to copy:', err);
        }
      }
    });
  });
</script>

<style>
  .share-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    color: var(--primary-color);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .share-button:hover {
    background: rgba(155, 107, 108, 0.1);
    transform: translateY(-2px);
  }

  .toast {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%) translateY(100px);
    background-color: var(--primary-color);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 4px;
    opacity: 0;
    transition: all 0.3s ease;
    z-index: 1000;
  }

  .toast.show {
    transform: translateX(-50%) translateY(0);
    opacity: 1;
  }
</style>